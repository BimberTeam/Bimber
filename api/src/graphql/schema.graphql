# const nameRegex = "@constraint(pattern: '^[a-zA-Z]*$', maxLength: 255)";
# const urlRegex = "@constraint(pattern: '^https://[0-9a-zA-Z]*.com$', maxLength: 255)";
# const ageConstraint  = "@constraint(pattern: '^[0-9]*$', min: 0, max: 120)";

type User {
    id: ID!
    name: String!
    image_url: String
    age: Int!
    friends: [User!]! @relation(name: "FRIENDS", direction: "OUT")
    location: Point
    favoriteDrink: Drink!
    description: String!
    gender: Gender!
    genderPreference: Gender!
    drinkPreference: Drink!
    agePreference: Drink!
}

type Drink  {
    name: String
    type: DrinkCategory
}

enum DrinkCategory {
    Vodka
    Beer
    Wine
}

enum Gender {
    Male
    Female
}

type Group {
    members: [User] @relation(name: "BELONGS_TO", direction: "IN")
    pendingMembers: [User] @relation(name: "PENDING", direction: "IN")
    requestedMembers: [User] @relation(name: "REQUESTED", direction: "IN")
    expireDate: Int
    averageAge: Float
    averageLocation: Point
}

type Mutation {
    AddFriend(from: ID!, to: ID!): String
    @cypher(
        statement: """
        MATCH(a: User {id: $from})
        MATCH(b: User {id: $to})
        MERGE(a)-[:FRIENDS]->(b)
        RETURN 'ok'
        """
    )
}